local hash = loadstring(game:HttpGet("http://void-scripts.com/Whitelist/localClient/hash.lua"))(); local http_request = request or http_request or (http and http.request) or syn.request; local isWhitelisted = false; local bodyTable = {}; bodyTable["serverKey"] = hash.serverKey(); bodyTable["userid"] = game.Players.LocalPlayer.UserId; bodyTable["wl_key"] = _G.wl_key; local jsonBody = game:GetService('HttpService'):JSONEncode(bodyTable) if _G.wl_key and hash then local Response = http_request({ Url = "http://void-scripts.com/Whitelist/api/verify.php", Method = "POST", Body = jsonBody; }); if Response.StatusCode == 200 then server_data = game.HttpService:JSONDecode(Response.Body) if server_data.verify[1].wl_key == hash.Hash(_G.wl_key) then if hash.decodeKey(server_data.verify[1].skey) then isWhitelisted = true; constants = server_data.constants; end else print('Key isn\'t verified: Server responded with status code '..Response.StatusCode); end else print('Bad Status Code: Server responded with status code '..Response.StatusCode); end else print('Key not supplied'); end repeat wait() until isWhitelisted; repeat until constants; repeat wait() local ind = nil;for i,v in pairs(constants[1][1]) do ind = i; if i == hash.constantKey() then break;end;end;until ind == hash.constantKey(); if not game[constants[1][1][hash.constantKey().."p"]].LocalPlayer.Name == game.Players.LocalPlayer.Name then repeat wait() until false;repeat until tick() == math.huge; end print("Key Authenticated!");

print("Hello welcome to the code of freedom")
